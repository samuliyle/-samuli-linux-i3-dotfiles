#!/usr/bin/env node

const util = require("util");
const exec = util.promisify(require("child_process").exec);

const config = {
  Monday: {
    reading: 120,
    listening: 60,
    output: 15,
    total: 180,
  },
  Tuesday: {
    reading: 120,
    listening: 60,
    output: 15,
    total: 180,
  },
  Wednesday: {
    reading: 120,
    listening: 60,
    output: 15,
    total: 180,
  },
  Thursday: {
    reading: 120,
    listening: 60,
    output: 15,
    total: 180,
  },
  Friday: {
    reading: 120,
    listening: 60,
    output: 15,
    total: 180,
  },
  Saturday: {
    reading: 120,
    listening: 60,
    output: 15,
    total: 180,
  },
  Sunday: {
    reading: 180,
    listening: 120,
    output: 15,
    total: 400,
  },
};

const weekday = [
  "Sunday",
  "Monday",
  "Tuesday",
  "Wednesday",
  "Thursday",
  "Friday",
  "Saturday",
];
let defaultMsg = "0:00 (0%)";

const getData = async (category, label, goal) => {
  const { stdout, stderr } = await exec("timew summary " + category);
  if (stderr) {
    return label + ": " + defaultMsg;
  }
  const output = stdout
    .split("\n")
    .filter(Boolean)
    .map((a) => a.trim());
  const time = output[output.length - 1];
  if (time.startsWith("No filtered data")) {
    return label + ": " + defaultMsg;
  }
  const times = time.split(":");
  const totalMinutes = +times[0] * 60 + +times[1];
  const percentage = Math.round((totalMinutes / goal) * 100);
  return `${label}: ${times[0]}:${times[1]} (${percentage}%)`;
};

const getDatas = async () => {
  const d = new Date();
  const goal = config[weekday[d.getDay()]];

  const reading = await getData("reading", "R", goal.reading);
  const listening = await getData("listening", "L", goal.listening);
  const output = await getData("output", "O", goal.output);
  const total = await getData("", "T", goal.total);
  console.log(reading + " " + listening + " " + output + " " + total);
};

getDatas();
